version: '2'
services:

  postgres:
    image: postgres

  elasticsearch:
   image: elasticsearch

  rabbitmq:
     image: rabbitmq

  django:
    build: .
    links:
      - postgres
      - elasticsearch
      - rabbitmq
    command: django-admin.py runserver 0.0.0.0:8000 --settings=nepal_geonode.settings
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=nepal_geonode.settings
      - ALLOWED_HOSTS=['django',]
      - GEOSERVER_PUBLIC_LOCATION=http://localhost/geoserver/
      - GEOSERVER_LOCATION=http://geoserver:8080/geoserver/


  celery:
    build: .
    links:
      - rabbitmq
      - postgres
      - elasticsearch
    command: celery worker --app=nepal_geonode.celeryapp:app -B -l INFO
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - GEOSERVER_BASE_URL="http://geoserver:8080/geoserver/"
      - DJANGO_SETTINGS_MODULE=nepal_geonode.settings
      - ALLOWED_HOSTS=['django',]
      - C_FORCE_ROOT=1

  geoserver:
    image: geonode/geoserver
    links:
      - postgres
    ports:
      - "8080"
    volumes_from:
      - data_dir_conf

  nginx:
    image: terranodo/nginx:geoserver
    links:
      - django
      - geoserver
    ports:
      - "80:80"
  data_dir_conf:
    image: geonode/geoserver_data
    container_name: geoserver_data_dir
    command: /bin/true
    volumes:
      - /geoserver_data/data

volumes:

  geoserver_data_dir:
